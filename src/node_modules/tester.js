require('babel-core/register')({
  presets: ['es2015', 'stage-0', 'react']
})

const describe = global.describe
const it = global.it
const chai = require('chai')

const assert = chai.assert

chai.use(require('chai-as-promised'))

module.exports = (modules) => {
  if (typeof objVal(objVal(modules)) === 'function') { // tests -> subtests -> function
    test(modules)
    return
  }

  iterate(modules, (module, name) => {
    describe(name, () => { test(module) })
  })
}

function test (tests) {
  iterate(tests, (subtest, title) => {
    describe(title, () => {
      iterate(subtest, (oneCase, text) => { runTest(text, oneCase) })
    })
  })
}

function runTest (text, callback) {
  it(text, () => {
    check(callback(assert))
  })
}

function checkArray (res) {
  assert[res[0] && typeof res[0] === 'object' ? 'deepEqual' : 'equal'](res[0], res[1], res[2])
}

function check (res) {
  if (res === undefined) {
    return
  }

  if (res instanceof Array) {
    checkArray(res)
    return
  }

  if (res instanceof Promise) {
    assert.isFulfilled(res)
    return
  }

  assert.isTrue(res)
}

function objVal (o) {
  return o[Object.keys(o)[0]]
}

function iterate (obj, callback) {
  const keys = Object.keys(obj)

  for (let i = 0; i < keys.length; i += 1) {
    const key = keys[i]
    callback(obj[key], key, i)
  }
}
